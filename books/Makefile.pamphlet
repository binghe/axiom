\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{books/Makefile}
\author{Timothy Daly}
\maketitle
\begin{abstract}
This Makefile creates all the primary documentation for Axiom
as pdf files in the final output tree.
\end{abstract}
\eject
\tableofcontents
\eject
Note that we need to set the SHELL variable here because the
default shell appears to be /bin/sh which does not follow the
semantics of echo used by /bin/bash. Thus, while trying to 
write the backslash-newpage lines the backslash-n gets interpreted
as a newline.

\section{The Source Books}
These are the primary source code literate programs containing
all of the Axiom code.

\begin{chunk}{sourcecode}
BOOKPDF=${PDF}/bookvol0.pdf    ${PDF}/bookvol1.pdf    ${PDF}/bookvol2.pdf \
        ${PDF}/bookvol3.pdf    ${PDF}/bookvol4.pdf    ${PDF}/bookvol5.pdf \
        ${PDF}/bookvol6.pdf    ${PDF}/bookvol7.pdf    ${PDF}/bookvol7.1.pdf \
        ${PDF}/bookvol8.pdf    ${PDF}/bookvol8.1.pdf  ${PDF}/bookvol9.pdf \
        ${PDF}/bookvol10.pdf   ${PDF}/bookvol10.1.pdf ${PDF}/bookvol10.2.pdf \
        ${PDF}/bookvol10.3.pdf ${PDF}/bookvol10.4.pdf ${PDF}/bookvol10.5.pdf \
        ${PDF}/bookvol11.pdf   ${PDF}/bookvol12.pdf   ${PDF}/bookvol13.pdf \
        ${PDF}/bookvol15.pdf   \
        ${PDF}/bookvolbib.pdf  ${PDF}/bookvolbug.pdf

\end{chunk}

\section{The Cookbook}
Explanation of particular functions, for example the gcd from 
EUCDOM, are stand-alone 1-2 page PDFs. They are intended to
present the algorithm, an example of its use, and an explanation
of why the algorithm might be used.

The idea is to mimic a cookbook where 'recipes' are presented in
capsule form. Basic recipies, such as making batter or eggs are
in one section, with the Axiom analogy being the gcd or resultant.

The 'side-dish/dessert' recipes like 'cake' would be Axiom's
polynomial factorization with 'cake icing' choices being things
like sparse, dense, recursive, or distributed forms.

The 'main course' recipes, such as steak, are primary Axiom
algorithms like the Groebner basis.

The '7-course' meals would be 'collections' of these pamphlets
for things like a course on Rings or solving the heat equation
for a physics class.
\begin{chunk}{cookbook}
COOKPAGES = ${COOKBOOK}/eucdom-gcd.pdf

\end{chunk}

\section{The Makefile}
\begin{chunk}{*}
SHELL=bash
PDF=${AXIOM}/doc
IN=${SPD}/books
LATEX=latex
MAKEINDEX=makeindex
BIBTEX=bibtex
DVIPS=dvips -Ppdf
PS2PDF=ps2pdf
RM=rm -f
OUT1=${MNT}/${SYS}/lib
OUTBIN=${MNT}/${SYS}/bin
COOKIN=${BOOKS}/cookbook
COOKBOOK=${PDF}/cookbook

\getchunk{cookbook}
\getchunk{sourcecode}

NEWSLETTERS=Newsletter.September85.pdf \
            Newsletter.June84.pdf Newsletter.January86.pdf \
            Newsletter.May86.pdf Newsletter.November87.pdf 

DESIGN=AldorDesign.pdf

PROVE=${PROOFS}/acl2.lisp ${PROOFS}/coq.lisp

OTHER=  ${PDF}/refcard.pdf     ${PDF}/endpaper.pdf    ${PDF}/rosetta.pdf

# NOTE: ${PDF}/toc.pdf cannot be built in recent TeXlive versions, disabled
all: announce tanglecopy ${PDF}/axiom.bib ${PDF}/master ${PROVE} ${OTHER} \
     ${COOKPAGES} ${BOOKPDF} spadedit axbook news design
	@(cd ${PDF} ; ${RM} *.out *.toc *.sty *.def *.png *.bbl *.blg)

${PDF}/master: 
	@ echo ==================================
	@ echo COPY GIT HEAD TO DOC
	@ echo ==================================
	@ git rev-parse HEAD > ${PDF}/master

tanglecopy:
	@ echo ==================================
	@ echo COPY TANGLEC TO BIN
	@ echo ==================================
	@ gcc -o tanglec tanglec.c
	@ cp tanglec ${OUTBIN}

news:
	@ echo ==================================
	@ echo COPY NEWSLETTERS
	@ echo ==================================
	@ (cp ${IN}/Newsletter* ${PDF} )

design:
	@ echo ==================================
	@ echo COPY DESIGN DOCS
	@ echo ==================================
	@ (cp ${IN}/AldorDesign.pdf ${PDF} )

axbook: axbook.tgz
	@ echo ==================================
	@ echo BUILDING AXIOM HYPERDOC BOOK
	@ echo ==================================
	@ (cd ${PDF} ; tar -zxf ${IN}/axbook.tgz )

announce:
	@ echo ==================================
	@ echo BUILDING PDF FILES books/Makefile
	@ echo ==================================

finish:
	@ echo ==========================================
	@ echo FINISHED BUILDING PDF FILES books/Makefile
	@ echo ==========================================

${PROOFS}/acl2.lisp:
	@ echo ===========================================
	@ echo making ${PROOFS}/acl2.lisp
	@ echo ===========================================
	@ ${BOOKS}/tanglec ${BOOKS}/bookvol5.pamphlet acl2 >${PROOFS}/acl2.lisp
	@ if [ .${ACL2} = .acl2 ] ; \
	   then \
	    ( cd ${PROOFS} ; echo '(ld "acl2.lisp")' | acl2 >acl2.output ) ; \
	   fi ; 

${PROOFS}/coq.lisp:
	@ echo ===========================================
	@ echo making ${PROOFS}/coq.lisp
	@ echo ===========================================
	@ ${BOOKS}/tanglec ${BOOKS}/bookvol10.2.pamphlet coq >${PROOFS}/coq.v
	@ ${BOOKS}/tanglec ${BOOKS}/bookvol10.3.pamphlet coq >>${PROOFS}/coq.v
	@ ${BOOKS}/tanglec ${BOOKS}/bookvol10.4.pamphlet coq >>${PROOFS}/coq.v
	@ if [ .${COQ} = .coq ] ; \
	   then \
	    ( cd ${PROOFS} ; cat coq.v | coqtop >coq.console 2>&1 ) ; \
	   fi ; 

${PDF}/axiom.bib:
	@ echo ===========================================
	@ echo making ${PDF}/axiom.bib from ${IN}/bookvolbib.pamphlet
	@ echo ===========================================
	@${BOOKS}/tanglec ${BOOKS}/bookvolbib.pamphlet axiom.bib \
           >${PDF}/axiom.bib

${PDF}/axiom.bst:
	@ echo ===========================================
	@ echo making ${PDF}/axiom.bst 
	@ echo ===========================================
	@ cp ${BOOKS}/axiom.bst ${PDF}/axiom.bst

${PDF}/endpaper.pdf: ${IN}/endpaper.pamphlet
	@ echo ===========================================
	@ echo making ${IN}/endpaper.pdf from ${PDF}/endpaper.pamphlet
	@ echo ===========================================
	@(cd ${PDF} ; \
          cp ${BOOKS}/endpaper.pamphlet ${PDF} ; \
	  ${LATEX} endpaper.pamphlet ; \
	  ${LATEX} endpaper.pamphlet ; \
	  ${BIBTEX} endpaper.aux ; \
	  ${LATEX} endpaper.pamphlet ; \
	  ${DVIPS} endpaper.dvi ; \
	  ${PS2PDF} endpaper.ps ; \
	  ${RM} endpaper.aux endpaper.dvi endpaper.log endpaper.out ; \
	  ${RM} endpaper.pamphlet endpaper.ps endpaper.toc )

${COOKBOOK}/%.pdf: ${COOKIN}/%.pamphlet
	@ echo ===========================================
	@ echo making ${COOKBOOK}/$*.pdf from ${COOKIN}/$*.pamphlet
	@ echo ===========================================
	@(cd ${COOKBOOK} ; \
	  cp ${BOOKS}/*.sty ${COOKBOOK} ; \
	  cp ${COOKIN}/$*.pamphlet ${COOKBOOK} ; \
	  ${RM} $*.toc ; \
	  if [ -z "${NOISE}" ] ; then \
	    ${LATEX} $*.pamphlet ; \
	    ${MAKEINDEX} $*.idx  1>/dev/null 2>/dev/null ; \
	    ${BIBTEX} $*.aux ; \
	    ${LATEX} $*.pamphlet >/dev/null ; \
	    ${LATEX} $*.pamphlet >/dev/null ; \
	    ${DVIPS} $*.dvi 2>/dev/null ; \
	    ${PS2PDF} $*.ps 2>/dev/null ; \
	  else \
	    ${LATEX} $*.pamphlet >${TMP}/trace ; \
	    ${MAKEINDEX} $*.idx  1>/dev/null 2>/dev/null ; \
	    ${BIBTEX} $*.aux  1>/dev/null 2>/dev/null ; \
	    ${LATEX} $*.pamphlet >${TMP}/trace ; \
	    ${LATEX} $*.pamphlet >${TMP}/trace ; \
	    ${DVIPS} $*.dvi 2>${TMP}/trace ; \
	    ${PS2PDF} $*.ps 2>${TMP}/trace ; \
	  fi ; \
	  ${RM} $*.aux $*.dvi $*.log $*.ps $*.idx $*.tex $*.pamphlet ; \
	  ${RM} $*.ilg $*.ind *.bbl *.blg *.sty)

${PDF}/bookvol2.pdf: ${IN}/bookvol2.pamphlet \
      ${PDF}/axiom.bib ${PDF}/axiom.bst 
	@ echo ===========================================
	@ echo making ${PDF}/bookvol2.pdf from ${IN}/bookvol2.pamphlet
	@ echo ===========================================
	@(cd ${PDF} ; \
	  cp ${BOOKS}/*.sty ${PDF} ; \
	  cp ${IN}/bookvol2.pamphlet ${PDF} ; \
	  cp ${IN}/bookheader.tex ${PDF} ; \
	  cp -pr ${IN}/ps ${PDF} ; \
	  ${RM} bookvol2.toc ; \
	  touch signatures.tex ; \
	  touch bookvol2.sigs ; \
	  if [ -z "${NOISE}" ] ; then \
	    ${LATEX} bookvol2.pamphlet ; \
	    cp signatures.tex bookvol2.sigs ; \
	    ${MAKEINDEX} bookvol2.idx  1>/dev/null 2>/dev/null ; \
	    ${BIBTEX} bookvol2.aux ; \
	    ${LATEX} bookvol2.pamphlet >/dev/null ; \
	    ${LATEX} bookvol2.pamphlet >/dev/null ; \
	    ${DVIPS} bookvol2.dvi 2>/dev/null ; \
	    ${PS2PDF} bookvol2.ps 2>/dev/null ; \
	    ${RM} bookvol2.aux bookvol2.dvi bookvol2.log \
	    ${RM} bookvol2.ps bookvol2.idx bookvol2.tex \
	    ${RM} bookvol2.pamphlet ; \
	    ${RM} bookvol2.ilg bookvol2.ind *.sigs signatures.tex ; \
	    ${RM} bookheader.tex ; \
	  else \
	    ${LATEX} bookvol2.pamphlet >${TMP}/trace ; \
	    cp signatures.tex bookvol2.sigs ; \
	    ${MAKEINDEX} bookvol2.idx  1>/dev/null 2>/dev/null ; \
	    ${BIBTEX} bookvol2.aux  1>/dev/null 2>/dev/null ; \
	    ${LATEX} bookvol2.pamphlet >${TMP}/trace ; \
	    ${LATEX} bookvol2.pamphlet >${TMP}/trace ; \
	    ${DVIPS} bookvol2.dvi 2>${TMP}/trace ; \
	    ${PS2PDF} bookvol2.ps 2>${TMP}/trace ; \
	    ${RM} bookvol2.aux bookvol2.dvi bookvol2.log \
	    ${RM} bookvol2.ps bookvol2.idx bookvol2.tex \
	    ${RM} bookvol2.pamphlet ; \
	    ${RM} bookvol2.ilg bookvol2.ind ; \
	    ${RM} bookvol2.ilg bookvol10.1.ind *.sigs signatures.tex ; \
	    ${RM} bookheader.tex ; \
	  fi ; \
	  ${RM} bookvol2.aux bookvol2.dvi bookvol2.log \
	  ${RM} bookvol2.ps bookvol2.idx bookvol2.tex \
	  ${RM} bookvol2.pamphlet ; \
	  ${RM} bookvol2.ilg bookvol2.ind ; \
	  ${RM} bookheader.tex )

${PDF}/bookvol10.1.pdf: ${IN}/bookvol10.1.pamphlet \
      ${PDF}/axiom.bib ${PDF}/axiom.bst 
	@ echo ===========================================
	@ echo making ${PDF}/bookvol10.1.pdf from ${IN}/bookvol10.1.pamphlet
	@ echo ===========================================
	@(cd ${PDF} ; \
	  cp ${BOOKS}/*.sty ${PDF} ; \
	  cp ${IN}/bookvol10.1.pamphlet ${PDF} ; \
	  cp ${IN}/bookheader.tex ${PDF} ; \
	  cp -pr ${IN}/ps ${PDF} ; \
	  ${RM} bookvol10.1.toc ; \
	  touch signatures.tex ; \
	  touch bookvol10.1.sigs ; \
	  if [ -z "${NOISE}" ] ; then \
	    ${LATEX} bookvol10.1.pamphlet ; \
	    cp signatures.tex bookvol10.1.sigs ; \
	    ${MAKEINDEX} bookvol10.1.idx  1>/dev/null 2>/dev/null ; \
	    ${BIBTEX} bookvol10.1.aux ; \
	    ${LATEX} bookvol10.1.pamphlet >/dev/null ; \
	    ${LATEX} bookvol10.1.pamphlet >/dev/null ; \
	    ${DVIPS} bookvol10.1.dvi 2>/dev/null ; \
	    ${PS2PDF} bookvol10.1.ps 2>/dev/null ; \
	    ${RM} bookvol10.1.aux bookvol10.1.dvi bookvol10.1.log \
	    ${RM} bookvol10.1.ps bookvol10.1.idx bookvol10.1.tex \
	    ${RM} bookvol10.1.pamphlet ; \
	    ${RM} bookvol10.1.ilg bookvol10.1.ind *.sigs signatures.tex ; \
	    ${RM} bookheader.tex ; \
	  else \
	    ${LATEX} bookvol10.1.pamphlet >${TMP}/trace ; \
	    cp signatures.tex bookvol10.1.sigs ; \
	    ${MAKEINDEX} bookvol10.1.idx  1>/dev/null 2>/dev/null ; \
	    ${BIBTEX} bookvol10.1.aux  1>/dev/null 2>/dev/null ; \
	    ${LATEX} bookvol10.1.pamphlet >${TMP}/trace ; \
	    ${LATEX} bookvol10.1.pamphlet >${TMP}/trace ; \
	    ${DVIPS} bookvol10.1.dvi 2>${TMP}/trace ; \
	    ${PS2PDF} bookvol10.1.ps 2>${TMP}/trace ; \
	    ${RM} bookvol10.1.aux bookvol10.1.dvi bookvol10.1.log \
	    ${RM} bookvol10.1.ps bookvol10.1.idx bookvol10.1.tex \
	    ${RM} bookvol10.1.pamphlet ; \
	    ${RM} bookvol10.1.ilg bookvol10.1.ind ; \
	    ${RM} bookvol10.1.ilg bookvol10.1.ind *.sigs signatures.tex ; \
	    ${RM} bookheader.tex ; \
	  fi ; \
	  ${RM} bookvol10.1.aux bookvol10.1.dvi bookvol10.1.log \
	  ${RM} bookvol10.1.ps bookvol10.1.idx bookvol10.1.tex \
	  ${RM} bookvol10.1.pamphlet ; \
	  ${RM} bookvol10.1.ilg bookvol10.1.ind ; \
	  ${RM} bookheader.tex )

${PDF}/bookvol15.pdf: ${IN}/bookvol15.pamphlet \
      ${PDF}/axiom.bib ${PDF}/axiom.bst 
	@ echo ===========================================
	@ echo making ${PDF}/bookvol15.pdf from ${IN}/bookvol15.pamphlet
	@ echo ===========================================
	@(cd ${PDF} ; \
	  cp ${BOOKS}/*.sty ${PDF} ; \
	  cp ${IN}/bookvol15.pamphlet ${PDF} ; \
	  cp ${IN}/bookheader.tex ${PDF} ; \
	  cp -pr ${IN}/ps ${PDF} ; \
	  ${RM} bookvol15.toc ; \
	  touch signatures.tex ; \
	  touch signatures.sort ; \
	  touch bookvol15.sigs ; \
	  rm -f bookvol15.aux bookvol15.bbl bookvol15.blg bookvol15.dvi bookvol15.idx ; \
	  rm -f bookvol15.log bookvol15.out bookvol15.pdf bookvol15.toc ; \
	  rm -f all.* cat.* dom.* pkg.* ; \
	  rm -f fig.mst doc.mst err.mst code.mst cat.mst dom.mst pkg.mst ; \
	  if [ -z "${NOISE}" ] ; then \
	    ${LATEX} bookvol15.pamphlet ; \
	    cp signatures.tex bookvol15.sigs ; \
	    ${MAKEINDEX} doc.idx  1>/dev/null 2>/dev/null ; \
	    ${MAKEINDEX} code.idx  1>/dev/null 2>/dev/null ; \
	    ${MAKEINDEX} cat.idx  1>/dev/null 2>/dev/null ; \
	    ${MAKEINDEX} dom.idx  1>/dev/null 2>/dev/null ; \
	    ${MAKEINDEX} pkg.idx  1>/dev/null 2>/dev/null ; \
	    ${MAKEINDEX} err.idx  1>/dev/null 2>/dev/null ; \
	    ${BIBTEX} bookvol15.aux ; \
	    ${LATEX} bookvol15.pamphlet >/dev/null ; \
	    ${BOOKS}/tanglec ${BOOKS}/bookvol15.pamphlet defun.SigSort >SigSort.lisp ; \
	    sbcl --noinform --eval '(load "SigSort")' ; \
	    detex -w bookvol15.pamphlet | sort -uf >bookvol15.words ; \
	    ${LATEX} bookvol15.pamphlet >/dev/null ; \
	    ${DVIPS} bookvol15.dvi 2>/dev/null ; \
	    ${PS2PDF} bookvol15.ps 2>/dev/null ; \
	  else \
	    ${LATEX} bookvol15.pamphlet >${TMP}/trace ; \
	    cp signatures.tex bookvol15.sigs ; \
	    ${MAKEINDEX} doc.idx  1>/dev/null 2>/dev/null ; \
	    ${MAKEINDEX} code.idx  1>/dev/null 2>/dev/null ; \
	    ${MAKEINDEX} cat.idx  1>/dev/null 2>/dev/null ; \
	    ${MAKEINDEX} dom.idx  1>/dev/null 2>/dev/null ; \
	    ${MAKEINDEX} pkg.idx  1>/dev/null 2>/dev/null ; \
	    ${MAKEINDEX} err.idx  1>/dev/null 2>/dev/null ; \
	    ${BIBTEX} bookvol15.aux  1>/dev/null 2>/dev/null ; \
	    ${LATEX} bookvol15.pamphlet >${TMP}/trace ; \
	    ${BOOKS}/tanglec ${BOOKS}/bookvol15.pamphlet defun.SigSort >SigSort.lisp ; \
	    sbcl --noinform --eval '(load "SigSort")' ; \
	    detex -w bookvol15.pamphlet | sort -uf >bookvol15.words ; \
	    ${LATEX} bookvol15.pamphlet >${TMP}/trace ; \
	    ${DVIPS} bookvol15.dvi >${TMP}/trace ; \
	    ${PS2PDF} bookvol15.ps >${TMP}/trace ; \
	  fi ; \
	  ${RM} bookvol15.aux bookvol15.dvi bookvol15.log ; \
	  ${RM} bookvol15.ps bookvol15.idx bookvol15.tex ; \
	  ${RM} bookvol15.pamphlet ; \
	  ${RM} bookvol15.ilg bookvol15.ind *.sigs signatures.tex ; \
	  ${RM} doc.idx doc.ilg doc.ind ; \
	  ${RM} code.idx code.ilg code.ind ; \
	  ${RM} cat.idx cat.ilg cat.ind ; \
	  ${RM} dom.idx dom.ilg dom.ind ; \
	  ${RM} pkg.idx pkg.ilg pkg.ind ; \
	  ${RM} err.idx err.ilg err.ind ; \
	  ${RM} bookheader.tex )

${PDF}/%.pdf: ${IN}/%.pamphlet ${PDF}/axiom.bib ${PDF}/axiom.bst 
	@ echo ===========================================
	@ echo making ${PDF}/$*.pdf from ${IN}/$*.pamphlet
	@ echo ===========================================
	@(cd ${PDF} ; \
	  cp ${BOOKS}/*.sty ${PDF} ; \
	  cp ${IN}/$*.pamphlet ${PDF} ; \
	  cp ${IN}/bookheader.tex ${PDF} ; \
	  cp -pr ${IN}/ps ${PDF} ; \
	  ${RM} $*.toc ; \
	  touch signatures.tex ; \
	  touch $*.sigs ; \
	  if [ -z "${NOISE}" ] ; then \
	    ${LATEX} $*.pamphlet ; \
	    cp signatures.tex $*.sigs ; \
	    cp signatures.tex signatures.sort ; \
	    ${MAKEINDEX} $*.idx  1>/dev/null 2>/dev/null ; \
	    ${BIBTEX} $*.aux ; \
	    ${LATEX} $*.pamphlet >/dev/null ; \
	    ${LATEX} $*.pamphlet >/dev/null ; \
	    ${DVIPS} $*.dvi 2>/dev/null ; \
	    ${PS2PDF} $*.ps 2>/dev/null ; \
	    ${RM} $*.aux $*.dvi $*.log $*.ps $*.idx $*.tex $*.pamphlet ; \
	    ${RM} $*.ilg $*.ind *.sigs signatures.tex ; \
	    ${RM} bookheader.tex ; \
	  else \
	    ${LATEX} $*.pamphlet >${TMP}/trace ; \
	    cp signatures.tex $*.sigs ; \
	    cp signatures.tex signatures.sort ; \
	    ${MAKEINDEX} $*.idx  1>/dev/null 2>/dev/null ; \
	    ${BIBTEX} $*.aux  1>/dev/null 2>/dev/null ; \
	    ${LATEX} $*.pamphlet >${TMP}/trace ; \
	    ${LATEX} $*.pamphlet >${TMP}/trace ; \
	    ${DVIPS} $*.dvi 2>${TMP}/trace ; \
	    ${PS2PDF} $*.ps 2>${TMP}/trace ; \
	    ${RM} $*.aux $*.dvi $*.log $*.ps $*.idx $*.tex $*.pamphlet ; \
	    ${RM} $*.ilg $*.ind ; \
	    ${RM} $*.ilg $*.ind *.sigs signatures.tex ; \
	    ${RM} bookheader.tex ; \
	  fi ; \
	  ${RM} $*.aux $*.dvi $*.log $*.ps $*.idx $*.tex $*.pamphlet ; \
	  ${RM} $*.ilg $*.ind ; \
	  ${RM} bookheader.tex )


\end{chunk}
\section{Combined Table of Contents}
This is the table of contents from the existing volumes combined into
one document for easy reference.

It turns out that the hyperref package adds junk on the end of the 
lines in the .toc files. We use these files to create the combined
table of contents so we need to clean up after hyperref. These 
patterns remove the last braced item in the line. If a new one
shows up you'll have to add the pattern here to remove it.

The cruft I've found so far has the forms:
\begin{itemize}
\item \verb|{chapter.1}|
\item \verb|{section.1.1}|
\item \verb|{subsection.1.1}|
\item \verb|{appendix.A}|
\item \verb|{section.A.1}|
\item \verb|{subsection.A.1}|
\end{itemize}
The sed patterns to match and remove them (in order) are:
\begin{chunk}{sed pattern}
	sed -e 's/{chapter.[0-9]*}//' \
            -e 's/{chapter\*.[1-9]}//' \
            -e 's/{chapter\*.13}//' \
            -e 's/{section.[0-9]*.[0-9]*}//' \
            -e 's/{subsection.[0-9]*.[0-9]*.[0-9]*}//' \
            -e 's/{appendix.*}//' \
            -e 's/{section.[A-Z]*.[0-9]*}//' \
            -e 's/{subsection.[A-Z]*.[0-9]*.[0-9]*}//' \
\end{chunk}
\begin{chunk}{*}
${PDF}/toc.pdf: ${BOOKPDF}
	@echo b3 making ${PDF}/toc.pdf
	@ cp ${BOOKS}/ps/axiomfront.ps ${PDF}
	@ cp ${BOOKS}/ps/bluebayou.ps ${PDF}
	@(cd ${PDF} ; \
	echo "\\errorcontextlines=1000" >toc.tex ; \
	echo "\\documentclass[dvips]{book}" >toc.tex ; \
	echo "\\setlength{\\textwidth}{400pt}" >>toc.tex ; \
	echo "\\newcommand{\\VolumeName}{Axiom Table of Contexts}" >>toc.tex ;\
	echo "\\usepackage{amssymb}" >>toc.tex ; \
	echo "\\usepackage{graphics}" >>toc.tex ; \
	echo "\\begin{document}" >>toc.tex ; \
	echo "\\begin{titlepage}" >>toc.tex ; \
	echo "\\center{\\includegraphics{axiomfront.ps}}" >>toc.tex ; \
	echo "\\vskip 0.1in" >>toc.tex ; \
	echo "\\includegraphics{bluebayou.ps}\\" >>toc.tex ; \
	echo "\\vskip 0.1in" >>toc.tex ; \
	echo "{\\Huge{The 30 Year Horizon}}" >>toc.tex ; \
	echo "\\vskip 0.1in" >>toc.tex ; \
	echo "\\[" >>toc.tex ; \
	echo "\\begin{array}{lll}" >>toc.tex ; \
	echo "Manuel\\ Bronstein & William\\ Burge &Timothy\\ Daly\\\\" \
          >>toc.tex ; \
	echo "James\\ Davenport & Michael\\ Dewar & Martin\\ Dunstan\\\\" \
          >>toc.tex ; \
	echo "Albrecht\\ Fortenbacher& Patrizia\\ Gianni & Johannes\\ Grabmeier \\\\" \
          >>toc.tex ; \
	echo "Jocelyn\\ Guidry & Richard\\ Jenks & Larry\\ Lambe \\\\" \
          >>toc.tex ; \
	echo "Michael\\ Monagan & Scott\\ Morrison & William\\ Sit \\\\" \
          >>toc.tex ; \
	echo "Jonathan\\ Steinbach & Robert\\ Sutor & Barry\\ Trager \\\\" \
          >>toc.tex ; \
	echo "Stephen\\ Watt & Jim\\ Wen & Clifton\\ Williamson" >>toc.tex ; \
	echo "\\end{array}" >>toc.tex ; \
	echo "\\]" >>toc.tex ; \
	echo "\\center{\\large{\\VolumeName}}" >>toc.tex ; \
	echo "\\end{titlepage}" >>toc.tex ; \
	echo "{\\bf Volume ~ 0}: Axiom {\\sl Jenks and Sutor}\\\\" >toc.toc ; \
	echo "{\\bf Volume ~ 1}: Axiom {\\sl Tutorial}\\\\" >>toc.toc ; \
	echo "{\\bf Volume ~ 2}: Axiom {\\sl Users Guide}\\\\" >>toc.toc ; \
	echo \
         "{\\bf Volume ~ 3}: Axiom {\\sl Programmers Guide}\\\\" >>toc.toc ; \
	echo \
         "{\\bf Volume ~ 4}: Axiom {\\sl Developers Guide}\\\\" >>toc.toc ; \
	echo "{\\bf Volume ~ 5}: Axiom {\\sl Interpreter}\\\\" >>toc.toc ; \
	echo "{\\bf Volume ~ 6}: Axiom {\\sl Command}\\\\" >>toc.toc ; \
	echo "{\\bf Volume ~ 7}: Axiom {\\sl Hyperdoc}\\\\" >>toc.toc ; \
	echo \
         "{\\bf Volume ~ 7.1}: Axiom {\\sl Hyperdoc Pages}\\\\" >>toc.toc ; \
	echo "{\\bf Volume ~ 8}: Axiom {\\sl Graphics}\\\\" >>toc.toc ; \
	echo "{\\bf Volume ~ 8.1}: Axiom {\\sl Gallery}\\\\" >>toc.toc ; \
	echo "{\\bf Volume ~ 9}: Axiom {\\sl Compiler}\\\\" >>toc.toc ; \
	echo "{\\bf Volume 10}: Axiom {\\sl Algebra: Implementation}\\\\" >>toc.toc ; \
	echo "{\\bf Volume 10.1}: Axiom {\\sl Algebra: Theory}\\\\" >>toc.toc ; \
	echo "{\\bf Volume 10.2}: Axiom {\\sl Algebra: Categories}\\\\" >>toc.toc ; \
	echo "{\\bf Volume 10.3}: Axiom {\\sl Algebra: Domains}\\\\" >>toc.toc ; \
	echo "{\\bf Volume 10.4}: Axiom {\\sl Algebra: Packages}\\\\" >>toc.toc ; \
	echo "{\\bf Volume 10.5}: Axiom {\\sl Algebra: Numerics}\\\\" >>toc.toc ; \
	echo "{\\bf Volume 11}: Axiom {\\sl Browser}\\\\" >>toc.toc ; \
	echo "{\\bf Volume 12}: Axiom {\\sl Crystal}\\\\" >>toc.toc ; \
	echo "{\\bf Volume 13}: Axiom {\\sl Proving Axiom Correct}\\\\" \
              >>toc.toc ; \
	echo "{\\bf Bibliography}: Axiom {\\sl Bibliography}\\\\" >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\tableofcontents" >>toc.tex ; \
	echo "\\end{document}" >>toc.tex ; \
	echo "\\section*{Volume 0: Axiom Jenks and Sutor}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvol0.toc >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\section*{Volume 1: Axiom Tutorial}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvol1.toc >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\section*{Volume 2: Axiom Users Guide}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvol2.toc >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\section*{Volume 3: Axiom Programmers Guide}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvol3.toc >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\section*{Volume 4: Axiom Developers Guide}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvol4.toc >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\section*{Volume 5: Axiom Interpreter}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvol5.toc >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\section*{Volume 6: Axiom Command}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvol6.toc >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\section*{Volume 7: Axiom Hyperdoc}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvol7.toc >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\section*{Volume 7.1: Axiom Hyperdoc}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvol7.1.toc >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\section*{Volume 8: Axiom Graphics}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvol8.toc >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\section*{Volume 8.1: Axiom Gallery}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvol8.1.toc >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\section*{Volume 9: Axiom Compiler}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvol9.toc >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\section*{Volume 10: Axiom Algebra: Implementation}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvol10.toc >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\section*{Volume 10.1: Axiom Algebra: Theory}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvol10.1.toc >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\section*{Volume 10.2: Axiom Algebra: Categories}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvol10.2.toc >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\section*{Volume 10.3: Axiom Algebra: Domains}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvol10.3.toc >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\section*{Volume 10.4: Axiom Algebra: Packages}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvol10.4.toc >>toc.toc ; \
            <bookvol10.toc >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\section*{Volume 10.5: Axiom Algebra: Numerics}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvol10.5.toc >>toc.toc ; \
            <bookvol10.toc >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\section*{Volume 11: Axiom Browser}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvol11.toc >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\section*{Volume 12: Axiom Crystal}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvol12.toc >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\section*{Volume 13: Proving Axiom Correct}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvol13.toc >>toc.toc ; \
	echo "\\newpage" >>toc.toc ; \
	echo "\\section*{Bibliography: Axiom Bibliography}" >>toc.toc ; \
\getchunk{sed pattern}
            <bookvolbib.toc >>toc.toc ; \
	if [ -z "${NOISE}" ] ; then \
	  ${LATEX} toc.tex ; \
	  ${DVIPS} toc.dvi 2>/dev/null ; \
	  ${PS2PDF} toc.ps 2>/dev/null ; \
	  ${RM} -f toc.aux toc.dvi toc.log toc.ps toc.tex toc.toc ; \
	  ${RM} -f bluebayou.ps axiomfront.ps ; \
	else \
	  ${LATEX} toc.tex >${TMP}/trace ; \
	  ${DVIPS} toc.dvi 2>${TMP}/trace ; \
	  ${PS2PDF} toc.ps 2>${TMP}/trace ; \
	  ${RM} -f toc.aux toc.dvi toc.log toc.ps toc.tex toc.toc ; \
	  ${RM} -f bluebayou.ps axiomfront.ps ; \
	fi )

\end{chunk}
\begin{chunk}{*}
spadedit:
	@echo b4 making spadedit from ${BOOKS}/bookvol5 to ${OUT1}
	@${BOOKS}/tanglec ${BOOKS}/bookvol5.pamphlet spadedit \
            >${OUT1}/SPADEDIT
	@chmod +x ${OUT1}/SPADEDIT

\end{chunk}
\section{Combined Bibliography}
\eject
\begin{thebibliography}{99}
\bibitem{1} CMUCL {\bf http://www.cons.org/cmucl}
\bibitem{2} GCL {\bf http://savannah.gnu.org/projects/gcl}
\bibitem{3} Codemist Ltd, ``Alta'', Horsecombe Vale Combs Down
Bath BA2 5QR UK Tel. +44-1225-837430 
{\bf http://www.codemist.co.uk}
\bibitem{4} \$SPAD/zips/noweb-2.10a.tgz, the noweb source tree
\bibitem{5} \$SPAD/zips/advi-1.2.0.tar.gz, the advi source tree
\end{thebibliography}
\end{document}


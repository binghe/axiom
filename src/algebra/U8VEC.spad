)abbrev domain U8VEC U8Vector
++ Author: Waldek Hebisch
++ Description:
++ This is a low-level domain which implements vectors
++ (one dimensional arrays) of unsigned 8-bit numbers.  Indexing
++ is 0 based, there is no bound checking (unless provided by
++ lower level).

U8Vector() : SIG == CODE where 

  SIG ==> OneDimensionalArrayAggregate Integer 

  CODE ==> add

   Qsize   ==> QVLENU8$Lisp
   Qelt    ==> ELTU8$Lisp
   Qsetelt ==> SETELTU8$Lisp
   Qnew    ==> GETREFVU8$Lisp

   #x == Qsize x
     ++ returns the length of the vector
     ++
     ++X t1:=new(10,10)$U8Vector
     ++X #t1

   minIndex x == 0
     ++ minIndex returns the minimum index of the vector
     ++
     ++X t1:=new(10,10)$U8Vector
     ++X minIndex t1

   empty() == Qnew(0$Lisp, 0$Lisp)
     ++ empty() returns a new vector of length 0
     ++
     ++X t1:=empty()$U8Vector

   new(n, x) == Qnew (n, x)
     ++ new(n, x) returns a new vector of length n filled with x
     ++
     ++X t1:=new(10,7)$U8Vector

   qelt(x, i) == Qelt(x, i)
     ++ qelt(x, i) returns the i-th element of x
     ++
     ++X t1:=new(10,7)$U8Vector
     ++X qelt(t1,3)

   elt(x:%, i:Integer) == Qelt(x, i)
     ++ elt(x, i) returns the i-th element of x
     ++
     ++X t1:=new(10,7)$U8Vector
     ++X elt(t1,3)

   qsetelt_!(x, i, s) == Qsetelt(x, i, s)
     ++ qsetelt(x, i, s) modifies the i-th element of x to be s
     ++
     ++X t1:=new(10,7)$U8Vector
     ++X qsetelt!(t1,3,9)

   setelt(x:%, i:Integer, s:Integer) == Qsetelt(x, i, s)
     ++ setelt(x, i, s) modifies the i-th element of x to be s
     ++
     ++X t1:=new(10,7)$U8Vector
     ++X setelt(t1,3,9)

   fill_!(x, s) == (for i in 0..((Qsize x) - 1) repeat Qsetelt(x, i, s); x)
     ++ fill!(x, s) modifies a vector x so every element has value s
     ++
     ++X t1:=new(10,7)$U8Vector
     ++X fill!(t1,9)


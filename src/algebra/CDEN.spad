)abbrev package CDEN CommonDenominator
++ Author: Manuel Bronstein
++ Date Created: 2 May 1988
++ Date Last Updated: 22 Nov 1989
++ Description: 
++ CommonDenominator provides functions to compute the
++ common denominator of a finite linear aggregate of elements of
++ the quotient field of an integral domain.

CommonDenominator(R, Q, A) : SIG == CODE where
  R : IntegralDomain
  Q : QuotientFieldCategory R
  A : FiniteLinearAggregate Q
 
  SIG ==> with

    commonDenominator : A -> R
      ++ commonDenominator([q1,...,qn]) returns a common denominator
      ++ d for q1,...,qn.

    clearDenominator : A -> A
      ++ clearDenominator([q1,...,qn]) returns \spad{[p1,...,pn]} such that
      ++ \spad{qi = pi/d} where d is a common denominator for the qi's.

    splitDenominator : A -> Record(num: A, den: R)
      ++ splitDenominator([q1,...,qn]) returns
      ++ \spad{[[p1,...,pn], d]} such that
      ++ \spad{qi = pi/d} and d is a common denominator for the qi's.
 
  CODE ==> add

    clearDenominator l ==
      d := commonDenominator l
      map(x+->numer(d*x)::Q, l)
 
    splitDenominator l ==
      d := commonDenominator l
      [map(x+->numer(d*x)::Q, l), d]
 
    if R has GcdDomain then

      qlcm: (Q, Q) -> Q
 
      qlcm(a, b)          == lcm(numer a, numer b)::Q

      commonDenominator l == numer reduce(qlcm, map(x+->denom(x)::Q, l), 1)

    else

      commonDenominator l == numer reduce("*", map(x+->denom(x)::Q, l), 1)


)abbrev package FDIV2 FiniteDivisorFunctions2
++ Author: Manuel Bronstein
++ Date Created: 1988
++ Date Last Updated: 19 May 1993
++ Description:
++ Lift a map to finite divisors.

FiniteDivisorFunctions2(R1, UP1, UPUP1, F1, R2, UP2, UPUP2, F2) : SIG == CODE where
  R1 : Field
  UP1 : UnivariatePolynomialCategory R1
  UPUP1 : UnivariatePolynomialCategory Fraction UP1
  F1 : FunctionFieldCategory(R1, UP1, UPUP1)
  R2 : Field
  UP2 : UnivariatePolynomialCategory R2
  UPUP2: UnivariatePolynomialCategory Fraction UP2
  F2 : FunctionFieldCategory(R2, UP2, UPUP2)

  SIG ==> with

    map : (R1 -> R2, FiniteDivisor(R1, UP1, UPUP1, F1)) ->
                                       FiniteDivisor(R2, UP2, UPUP2, F2)
      ++ map(f,d) \undocumented{} 

  CODE ==> add

    import UnivariatePolynomialCategoryFunctions2(R1,UP1,R2,UP2)
    import FunctionFieldCategoryFunctions2(R1,UP1,UPUP1,F1,R2,UP2,UPUP2,F2)
    import FractionalIdealFunctions2(UP1, Fraction UP1, UPUP1, F1,
                                     UP2, Fraction UP2, UPUP2, F2)

    map(f, d) ==
      rec := decompose d
      divisor map(f, rec.principalPart) + 
        divisor map((s:UP1):UP2 +-> map(f,s), rec.id)


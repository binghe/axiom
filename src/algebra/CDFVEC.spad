)abbrev domain CDFVEC ComplexDoubleFloatVector
++ Author: Waldek Hebisch
++ Description:
++ This is a low-level domain which implements vectors
++ (one dimensional arrays) of complex double precision floating point
++ numbers.  Indexing is 0 based, there is no bound checking (unless
++ provided by lower level).

ComplexDoubleFloatVector() : SIG == CODE where

  SIG ==> VectorCategory Complex DoubleFloat with

    qnew : Integer -> %
      ++ qnew(n) creates a new uninitialized vector of length n.
      ++
      ++X t1:CDFVEC:=qnew 7

    vector : List Complex DoubleFloat -> %
      ++ vector(l) converts the list l to a vector.
      ++
      ++X t1:List(Complex(DoubleFloat)):=[1+2*%i,3+4*%i,-5-6*%i]
      ++X t2:CDFVEC:=vector(t1)

  CODE ==> add
    
    Qelt1 ==> CDELT$Lisp

    Qsetelt1 ==> CDSETELT$Lisp

    qelt(x, i) == Qelt1(x, i)

    qsetelt_!(x, i, s) == Qsetelt1(x, i, s)

    Qsize ==> CDLEN$Lisp

    Qnew ==> MAKE_-CDOUBLE_-VECTOR$Lisp

    #x                          == Qsize x

    minIndex x                  == 0

    empty()                     == Qnew(0$Lisp)

    qnew(n)                     == Qnew(n)

    new(n, x)                   ==
        res := Qnew(n)
        fill_!(res, x)

    elt(x:%, i:Integer)         == Qelt1(x, i)

    setelt(x : %, i : Integer, s : Complex DoubleFloat) ==
        Qsetelt1(x, i, s)

    fill_!(x, s)       ==
        for i in 0..((Qsize(x)) - 1) repeat Qsetelt1(x, i, s)
        x

